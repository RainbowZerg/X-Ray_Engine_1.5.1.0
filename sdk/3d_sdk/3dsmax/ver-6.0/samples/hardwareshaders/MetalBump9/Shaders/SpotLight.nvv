//_____________________________________________________________________________
//
//	File:		SpotLight.nvv
//	
//_____________________________________________________________________________


//_____________________________________________________________________________
//
//	Include files	
//
//_____________________________________________________________________________

#include "ShaderConst.h"

//_____________________________________________________________________________
//
//	Defines	
//
//_____________________________________________________________________________

#define NORMAL_LOCAL		r0
#define LIGHT_LOCAL			r1
#define POSITION_WORLD		r2
#define LIGHT_ATTEN			r3
#define LIGHT_SPOT			r4
#define ALIGN				r5

vs_1_1

dcl_position	v0
dcl_normal		v1


//_____________________________________
//
//	Transform 
//
//_____________________________________

dp4 oPos.x, V_POSITION, c[CV_WORLDVIEWPROJ_0]
dp4 oPos.y, V_POSITION, c[CV_WORLDVIEWPROJ_1]
dp4 oPos.z, V_POSITION, c[CV_WORLDVIEWPROJ_2]
dp4 oPos.w, V_POSITION, c[CV_WORLDVIEWPROJ_3]


//_____________________________________
//
//	Transform 
//
//_____________________________________

dp4 POSITION_WORLD.x, V_POSITION, c[CV_WORLD_0]
dp4 POSITION_WORLD.y, V_POSITION, c[CV_WORLD_1]
dp4 POSITION_WORLD.z, V_POSITION, c[CV_WORLD_2]

//_____________________________________
//
//	Vector 
//
//_____________________________________

add LIGHT_LOCAL, c[CV_LIGHT_POSITION], -POSITION_WORLD.xyz 

//_____________________________________
//
//	Normalize 
//
//_____________________________________

dp3 LIGHT_LOCAL.w, LIGHT_LOCAL, LIGHT_LOCAL
rsq LIGHT_LOCAL.w, LIGHT_LOCAL.w
rcp LIGHT_ATTEN,   LIGHT_LOCAL.w
mul LIGHT_ATTEN,   LIGHT_ATTEN.w, c[CV_LIGHT_OUTER_RANGE].x
mul LIGHT_LOCAL,   LIGHT_LOCAL, LIGHT_LOCAL.w


//_____________________________________
//
//	Output atten 
//
//_____________________________________

sub LIGHT_ATTEN, c[CV_ONE],LIGHT_ATTEN.x

//_____________________________________
//
//	Back projection 
//
//_____________________________________

dp3 ALIGN, LIGHT_LOCAL, c[CV_LIGHT_DIR]
sge ALIGN, ALIGN, -c[CV_ZERO].x      
mul oD0, LIGHT_ATTEN.x, ALIGN.x

//_____________________________________
//
//	Transform  
//
//_____________________________________

dp3 NORMAL_LOCAL.x, V_NORMAL, c[CV_WORLD_0]
dp3 NORMAL_LOCAL.y, V_NORMAL, c[CV_WORLD_1]
dp3 NORMAL_LOCAL.z, V_NORMAL, c[CV_WORLD_2]

//_____________________________________
//
//	Output normal 
//
//_____________________________________

mov oT0.xyz, NORMAL_LOCAL
mov oT0.w,   c[CV_ONE].w


//_____________________________________
//
//	Output light  
//
//_____________________________________

mov oT1.xyz, c[CV_LIGHT_DIR]
mov oT1.w,   c[CV_ONE].w

//_____________________________________
//
//	Output spot texture 
//
//_____________________________________

dp4 oT3.x,  V_POSITION, c[CV_TEXMAT_0]
dp4 oT3.y,  V_POSITION, c[CV_TEXMAT_1]
dp4 oT3.z,  V_POSITION, c[CV_TEXMAT_2]
dp4 oT3.w,  V_POSITION, c[CV_TEXMAT_3]






