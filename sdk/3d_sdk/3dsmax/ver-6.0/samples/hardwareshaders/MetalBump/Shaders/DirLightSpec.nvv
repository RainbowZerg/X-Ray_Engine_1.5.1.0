//_____________________________________________________________________________
//
//	File:		DirLightSpec.nvv
//	
//_____________________________________________________________________________


//_____________________________________________________________________________
//
//	Include files	
//
//_____________________________________________________________________________

#include "ShaderConst.h"

//_____________________________________________________________________________
//
//	Defines	
//
//_____________________________________________________________________________

#define S_WORLD				r0
#define T_WORLD				r1
#define SxT_WORLD			r2
#define LIGHT_LOCAL			r3
#define POSITION_WORLD		r4
#define EYE_VECTOR			r5
#define HALF_ANGLE			r6
#define NORMAL_LOCAL		r7
#define WORLD_TEMP	 		r8


vs.1.0

//_____________________________________
//
//	Transform 
//
//_____________________________________

dp4 oPos.x, V_POSITION, c[CV_WORLDVIEWPROJ_0]
dp4 oPos.y, V_POSITION, c[CV_WORLDVIEWPROJ_1]
dp4 oPos.z, V_POSITION, c[CV_WORLDVIEWPROJ_2]
dp4 oPos.w, V_POSITION, c[CV_WORLDVIEWPROJ_3]

//_____________________________________
//
//	Transform basis
//
//_____________________________________

m3x3 S_WORLD,   V_S,	  c[CV_WORLD_0]
m3x3 SxT_WORLD, V_NORMAL, c[CV_WORLD_0]
mul WORLD_TEMP, S_WORLD.zxyw, SxT_WORLD.yzxw   
mad T_WORLD,    S_WORLD.yzxw, SxT_WORLD.zxyw, -WORLD_TEMP

//_____________________________________
//
//	Transform light
//
//_____________________________________

dp3 LIGHT_LOCAL.x, S_WORLD.xyz,   c[CV_LIGHT_DIR]
dp3 LIGHT_LOCAL.y, T_WORLD.xyz,   c[CV_LIGHT_DIR]
dp3 LIGHT_LOCAL.z, SxT_WORLD.xyz, c[CV_LIGHT_DIR]

//_____________________________________
//
//	Normalize  
//
//_____________________________________

dp3 LIGHT_LOCAL.w, LIGHT_LOCAL, LIGHT_LOCAL
rsq LIGHT_LOCAL.w, LIGHT_LOCAL.w
mul LIGHT_LOCAL,   LIGHT_LOCAL, LIGHT_LOCAL.w


//_____________________________________
//
//	Transform  
//
//_____________________________________

dp3 NORMAL_LOCAL.x,  S_WORLD.xyz,	V_NORMAL
dp3 NORMAL_LOCAL.y,  T_WORLD.xyz,	V_NORMAL
dp3 NORMAL_LOCAL.z,  SxT_WORLD.xyz,	V_NORMAL


//_____________________________________
//
//	Transform  
//
//_____________________________________

dp4 POSITION_WORLD.x, V_POSITION, c[CV_WORLD_0]
dp4 POSITION_WORLD.y, V_POSITION, c[CV_WORLD_1]
dp4 POSITION_WORLD.z, V_POSITION, c[CV_WORLD_2]

//_____________________________________
//
//	Eye vector  
//
//_____________________________________

add EYE_VECTOR,  c[CV_EYE], -POSITION_WORLD.xyz

//_____________________________________
//
//	Normalize  
//
//_____________________________________

dp3 EYE_VECTOR.w, EYE_VECTOR, EYE_VECTOR
rsq EYE_VECTOR.w, EYE_VECTOR.w
mul EYE_VECTOR,   EYE_VECTOR, EYE_VECTOR.w

//_____________________________________
//
//	Half angle  
//
//_____________________________________

add HALF_ANGLE,  c[CV_LIGHT_DIR], EYE_VECTOR

//_____________________________________
//
//	Normalize  
//
//_____________________________________

dp3 HALF_ANGLE.w, HALF_ANGLE, HALF_ANGLE
rsq HALF_ANGLE.w, HALF_ANGLE.w
mul HALF_ANGLE,   HALF_ANGLE, HALF_ANGLE.w



//_____________________________________
//
//	Output normal  
//
//_____________________________________

mov oT0.xyz, NORMAL_LOCAL
mov oT0.w,   c[CV_ONE].w		

//_____________________________________
//
//	Output light  
//
//_____________________________________

mov oT1.xyz, LIGHT_LOCAL
mov oT1.w,   c[CV_ONE].w		

//_____________________________________
//
//	Ouput half angle  
//
//_____________________________________

dp3 oT2.x, HALF_ANGLE, S_WORLD
dp3 oT2.y, HALF_ANGLE, T_WORLD
dp3 oT2.z, HALF_ANGLE, SxT_WORLD
mov oT2.w, c[CV_ONE]


//_____________________________________
//
//	Output texture 
//
//_____________________________________










