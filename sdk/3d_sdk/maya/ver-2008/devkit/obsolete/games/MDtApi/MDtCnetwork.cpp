//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All 
// rights reserved.
//
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors, which is protected by U.S. and Canadian federal copyright 
// law and by international treaties.
//
// The Data is provided for use exclusively by You. You have the right 
// to use, modify, and incorporate this Data into other products for 
// purposes authorized by the Autodesk software license agreement, 
// without fee.
//
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the 
// following disclaimer, must be included in all copies of the 
// Software, in whole or in part, and all derivative works of 
// the Software, unless such copies or derivative works are solely 
// in the form of machine-executable object code generated by a 
// source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
// PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
// TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS 
// BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK 
// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
// OR PROBABILITY OF SUCH DAMAGES.
//
// ==========================================================================
//+

// Description:
//				Metacycle is not implemented in Maya.
//			  	All the functions in this file either return NULL 
//              or commented out at this point.
//

#include <stdio.h>
#if defined (UNIX) || defined (WIN32)
#include <malloc.h>
#endif

#include <MDt.h>


// HERE ARE THE BACKDOORS!
//
#define ACN_NODE_PREVIEW_LOOPS  0
#define ACN_NODE_PREVIEW_FRAMES 1
#define ACN_STARTFRAME_ONE      0
#define ACN_STARTFRAME_END      1
#define ACN_STARTFRAME_SPACED   2
#define ACN_STARTFRAME_ALL      3

#define ACN_ENDFRAME_START          0
#define ACN_ENDFRAME_ONE            1

#define ACN_ROLLING_ENDPOINT     0
#define ACN_FIXED_ENDPOINT       1

#define ACN_ROLLING_STARTPOINT     0
#define ACN_FIXED_STARTPOINT       1

#define ACN_LINEAR               0
#define ACN_EASE                 1

#ifdef WIN32
#include <string.h>
#else
#include <strings.h>
#endif

/*
 * This is a magic number to terminate a list of transitions.
 */
#define LIST_TERM -999999


//
// Return a count of the number of characters in the scene
//
int DtCnetCharacterCount( int *count )
{
	*count = 0;

	return 0;
}

// 
// Returns the range of frames defined in the character network.
// 1 on success, 0 on failure
//
//	Not implemented for Maya

int DtCnetCharacterGetFrameRange(int cnetId, int *start, int *end)
{
	*start = 0;
	*end = 0;

	return(0);
}  


//
// Return the number and list of parent shapes that belong
// to the character.
// 1 on success, 0 on failure.
//
//	Not implemented for Maya

int DtCnetCharacterGetShapes(int cnetId, int *count, int **shapelist)
{
	*count = 0;
	*shapelist = NULL;

	return(0);
}

//
// Return the name of character N
//
int DtCnetCharacterName( int i, char **name )
{
	return 0;
}

//
// Return a state table corresponding to character N
//
int DtCnetGetStateTable( int i, DtStateTable **table )
{
	return 0;
}

