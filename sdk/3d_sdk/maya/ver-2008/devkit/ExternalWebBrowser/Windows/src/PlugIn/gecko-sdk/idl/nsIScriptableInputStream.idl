/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is Mozilla Communicator client code, 
 * released March 31, 1998. 
 *
 * The Initial Developer of the Original Code is Netscape Communications 
 * Corporation.  Portions created by Netscape are
 * Copyright (C) 1998-1999 Netscape Communications Corporation. All
 * Rights Reserved.
 */

#include "nsISupports.idl"

interface nsIInputStream;

/**
 * nsIScriptableInputStream provides scriptable access to the nsIInputStream.  
 *
 * @status FROZEN
 */
[scriptable, uuid(a2a32f90-9b90-11d3-a189-0050041caf44)] 
interface nsIScriptableInputStream : nsISupports
{ 
    /** 
     * Closes the stream. 
     */
    void close();

    /** Wrap the given nsIInputStream with this nsIScriptableInputStream. 
     *  @param aInputStream [in] parameter providing the stream to wrap 
     */ 
    void init(in nsIInputStream aInputStream); 

    /** Return the number of bytes currently available in the stream 
     *  @param _retval [out] parameter to hold the number of bytes 
     *         if an error occurs, the parameter will be undefined 
     *  @return error status 
     */ 
    unsigned long available(); 

    /** Read data from the stream. 
     *  @param aCount [in] the maximum number of bytes to read 
     *  @param _retval [out] the data
     */ 
    string read(in unsigned long aCount); 
}; 
