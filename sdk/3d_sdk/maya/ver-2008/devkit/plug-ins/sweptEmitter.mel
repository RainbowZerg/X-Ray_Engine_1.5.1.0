//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All 
// rights reserved.
//
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors, which is protected by U.S. and Canadian federal copyright 
// law and by international treaties.
//
// The Data is provided for use exclusively by You. You have the right 
// to use, modify, and incorporate this Data into other products for 
// purposes authorized by the Autodesk software license agreement, 
// without fee.
//
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the 
// following disclaimer, must be included in all copies of the 
// Software, in whole or in part, and all derivative works of 
// the Software, unless such copies or derivative works are solely 
// in the form of machine-executable object code generated by a 
// source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
// PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
// TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS 
// BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK 
// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
// OR PROBABILITY OF SUCH DAMAGES.
//
// ==========================================================================
//+

global proc sweptEmitter() 
{
	file -force -new;
    currentUnit -linear centimeter -angle degree -time film;   

	// Load the plug-in emitter. And create an emitter node.
	//
	loadPlugin "sweptEmitter.so";

	// create emitter node
	createNode sweptEmitter -name sweptEmitter;

    // create curve
	// create particle object 
    // connect plugin emitter to particles
    // add curve as owner of emitter
	//
	curve -d 3 -p 0.9062838 0 7.48741 -p 7.895241 0 4.645029 -p 8.033125 0 -3.832477 -p 1.767829 0 -9.903498 -k 0 -k 0 -k 0 -k 1 -k 1 -k 1 ;


	particle -name particles ;

	connectDynamic -em sweptEmitter particles;

	addDynamic sweptEmitter curve1;

	setAttr "sweptEmitter.speed" 20;
	setAttr "sweptEmitter.rate"  48;
	// change smaller tesselation
	setAttr "geoConnector1.tessellationFactor" 20;


    playbackOptions -e -min 0.00 -max 15.0;
	currentTime -e 0;
	play -wait -forward true;


	// animate emitter transform
	select -r sweptEmitter;
	setAttr "sweptEmitter.speed" 20;
    playbackOptions -e -min 0.00 -max 60.0;

	currentTime -e 0;
	setKeyframe "sweptEmitter.rz";

	currentTime -e 15;
	rotate -r -eu 0 0 50.4 ;
	setKeyframe "sweptEmitter.rz";

	currentTime -e 30;
	rotate -r -eu 0 0 -45.4 ;
	setKeyframe "sweptEmitter.rz";

	currentTime -e 60;
	rotate -r -eu 0 0 90. ;
	setKeyframe "sweptEmitter.rz";

	currentTime -e 0;
	play -wait -forward true;

    // delete keyframe connections
    disconnectAttr sweptEmitter_rotateZ.output sweptEmitter.rotateZ;
	setAttr sweptEmitter.rz 0;

	// animate the curve's transform

	select -r curve1;
	currentTime -e 0;
	setKeyframe "curve1.rz";

	currentTime -e 60 ;
	setAttr "curve1.rotateZ" 180;
	setKeyframe "curve1.rz";

	currentTime -e 0 ;
	play -wait -forward true;


	// animate some control points

	currentTime -e 60 ;
	select -cl  ;
	select -r curveShape1.cv[0] ;
	move -r 0 0 -10.138097 ;
	move -r 0 -7.424408 0 ;
	setKeyframe -breakdown 0 -hierarchy none -controlPoints 1 -shape 1;

	select -r curveShape1.cv[3] ;
	move -r 0 6.192177 0 ;
	setKeyframe -breakdown 0 -hierarchy none -controlPoints 1 -shape 1;

	currentTime -e 0 ;
	play -wait -forward true;

}


