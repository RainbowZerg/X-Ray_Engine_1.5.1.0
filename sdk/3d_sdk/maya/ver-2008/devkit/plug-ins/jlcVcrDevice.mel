//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All 
// rights reserved.
//
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors, which is protected by U.S. and Canadian federal copyright 
// law and by international treaties.
//
// The Data is provided for use exclusively by You. You have the right 
// to use, modify, and incorporate this Data into other products for 
// purposes authorized by the Autodesk software license agreement, 
// without fee.
//
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the 
// following disclaimer, must be included in all copies of the 
// Software, in whole or in part, and all derivative works of 
// the Software, unless such copies or derivative works are solely 
// in the form of machine-executable object code generated by a 
// source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
// PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
// TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS 
// BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK 
// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
// OR PROBABILITY OF SUCH DAMAGES.
//
// ==========================================================================
//+

//
// This script attaches the JLCooper VCR controls to the timeslider controls
//

global proc midiRecord()
{
	assignInputDevice -d "jlcVcr" -c "rewind" "currentTime -e `playbackOptions -q -min`";
	assignInputDevice -d "jlcVcr" -c "forward" -m "currentTime -e `playbackOptions -q -max`";
	assignInputDevice -d "jlcVcr" -c "stop" -m "stp";
	assignInputDevice -d "jlcVcr" -c "play" -m "ply";
	assignInputDevice -d "jlcVcr" -c "record" -m "rec";
	assignInputDevice -d "jlcVcr" -m "timeOffset($scrub)";
}

//
// You have to call these functions instead of the commands since
// the device command dispatcher replaces the text names of the buttons
// (play, stop, record) with their boolean values so "play" becomes "1"
// which is not a valid command.

global proc ply()
{
	play;
}

global proc stp()
{
	play -state off;
}

global proc rec()
{
	setKeyframe;
}

global proc timeOffset(int $deltaTime)
{
	int $currentFrameLocal;
	int $newFrameLocal;
	int $minFrameValue;
	int $maxFrameValue;
	$minFrameValue = `playbackOptions -q -min`;
    $maxFrameValue = `playbackOptions -q -max`;

	$currentFrameLocal = `currentTime -q`;
	$newFrameLocal = $currentFrameLocal + $deltaTime * (($maxFrameValue - $minFrameValue) / 200.0);

	if ($newFrameLocal < $minFrameValue) {
		$newFrameLocal = $minFrameValue;
	} else if ($newFrameLocal > $maxFrameValue) {
		$newFrameLocal = $maxFrameValue;
	}

	currentTime -e $newFrameLocal;
}

midiRecord;
