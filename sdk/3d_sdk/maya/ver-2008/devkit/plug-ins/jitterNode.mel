//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All 
// rights reserved.
//
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors, which is protected by U.S. and Canadian federal copyright 
// law and by international treaties.
//
// The Data is provided for use exclusively by You. You have the right 
// to use, modify, and incorporate this Data into other products for 
// purposes authorized by the Autodesk software license agreement, 
// without fee.
//
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the 
// following disclaimer, must be included in all copies of the 
// Software, in whole or in part, and all derivative works of 
// the Software, unless such copies or derivative works are solely 
// in the form of machine-executable object code generated by a 
// source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
// PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
// TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS 
// BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK 
// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
// OR PROBABILITY OF SUCH DAMAGES.
//
// ==========================================================================
//+

// Usage:
// 
// 	Use jitterNode.mel to insert jitter DG node between
// 	a float value connection in your DG:
// 
//         jitter ("jitX",							// the name of the new
//													// jitter node
// 				"paramCurveTimeToLinear1.output",	// input value
// 				"surface1.translateX"				// output value
// 				);
// 
// 	to jitter the X translation channel of a keyframed 
// 	surface by jittering the function curve
// 	"paramCurveTimeToLinear1.output" and passing the
// 	result to "surface1.translateX".
// 
// 	or:
// 
// 	jitter ("jitX","motionPath1.xCoord", "surface1.translateX");
// 
// 	to jitter the X position of an object "surface1" which 
// 	is animted on a motion path "motionPath1".
// 
// 	Use "setAttr jitX.scale 2;" to set the scale value to 2.

//
//	Script for inserting a jitter node between two float Attributes.
//	If a connection already exists between the Attributes, the procedure
//  will break the connection.
//  If a connection does not already exist between the two Attributes, but
//  the destination Attribute already has an input connection from a different
//  Node, then the procedure fails because fan-in is not allowed in the DG.
//
//	Then setup a slider to control the scale value of the
//	jitter.
//
global proc jitter( string $jitName, string $sourceName, string $destName )
{

	string $jitTime = $jitName + ".time";
	string $jitScale = $jitName + ".scale";
	string $jitInput = $jitName + ".input";
	string $jitOutput = $jitName + ".output";

	//  If the two attributes are connected then disconnect them
	//
	if (`isConnected $sourceName $destName` )
	{
		disconnectAttr  $sourceName  $destName;
	}

	//  Create the Jitter Node
	//
	createNode "jitter" -n $jitName;

	//  Synch the Jitter Node to the Maya Time Slider
	//
	connectAttr  time1.outTime  $jitTime;

	//  "Jitter" to the source value
	//
	connectAttr $sourceName $jitInput;

	//  Pass on the "jittered" value on to the destination
	//
	connectAttr $jitOutput $destName;

	string $winName = $jitName + "_Scale";
	string $layoutName = $jitName + "_Layout";
	string $sliderName = $jitName + "_Slider";

	//  Create Jitter Scale Window
	//
	window -t ($jitName+"Scale Editor") -wh 400 50  $winName;

	// Create UI Controls
	//
	columnLayout -adj true -cal left -cw 400 $layoutName; 
		floatSliderGrp
            -label "Scale"
			-field true
	        -min 0 -max 100 
			-value 1.0
			-changeCommand
                 ("setAttr "+$jitScale+" `floatSliderGrp -q -v "+$sliderName+"`;")
			-dragCommand
                 ("setAttr "+$jitScale+" `floatSliderGrp -q -v "+$sliderName+"`;")
			$sliderName;

	//  Put up the Jitter Scale Window
	//
	showWindow $winName;
}
