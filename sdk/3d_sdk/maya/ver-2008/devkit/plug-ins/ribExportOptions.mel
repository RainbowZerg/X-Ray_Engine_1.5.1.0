// Copyright (C) 1997-2006 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


global proc int ribExportOptions ( string $parent,
								   string $action,
								   string $initialSettings,
								   string $resultCallback )
//
//	Description:
//		This script posts the RIB file translator options.
//		The optionsString is of the form:
//			varName1=value1;varName2=value2;...
//
//	Parameters:
//		$parent - the elf parent layout for this options layout. It is
//					always a scrollLayout.
//		$action - the action that is to be performed with this invokation
//					of this proc. Valid options are:
//						"query" - construct the options string and pass it
//									to the resultCallback.
//						"post" - post all the elf controls.
//		$initialSettings - the current options string in effect at the
//						   time this script is invoked.
//		$resultCallback -
//				This is the proc to be called with the result string. 
//				resultCallback ( string $optionsString )
//
//	Returns:
//		1 if successfull.
//		0 otherwise.
//
{
	int		$bResult;
	string	$currentOptions;
	string	$optionList[];
	string	$optionBreakDown[];
	int		$index;
	
	if ($action == "post") {
		setParent $parent;

		columnLayout -adj true ribTypeCol;
			radioButtonGrp
				-l "Single File Output"
				-nrb 2 -cw3 175 75 75
				-la2 "Yes" "No"
				-on1 "radioButtonGrp -e -en false ribExtensionPaddingGrp"
				-on2 "radioButtonGrp -e -en true ribExtensionPaddingGrp"
				ribSingleFileGrp;
			radioButtonGrp
				-l "Extension Padding"
				-nrb 2 -cw3 175 75 75
				-la2 "On" "Off" ribExtensionPaddingGrp;
			radioButtonGrp
				-l "Geometry Motion Blur"
				-nrb 2	-cw3 175 75 75
				-la2 "On" "Off" ribGeometryMotionBlur;
			intFieldGrp
				-l "Pixel Samples"
				ribPixelSamplesGrp;
					
		// Now set to current settings.
		$currentOptions = $initialSettings;
		if (size($currentOptions) > 0) {
			tokenize($currentOptions, ";", $optionList);
			for ($index = 0; $index < size($optionList); $index++) {
				tokenize($optionList[$index], "=", $optionBreakDown);

				if ($optionBreakDown[0] == "singleFile") {
					if ($optionBreakDown[1] == "0") {
						radioButtonGrp -e -sl 2 ribSingleFileGrp;
						radioButtonGrp -e -en true ribExtensionPaddingGrp;
					} else {
						radioButtonGrp -e -sl 1 ribSingleFileGrp;
						radioButtonGrp -e -en false ribExtensionPaddingGrp;
					}
				} else if ($optionBreakDown[0] == "extensionPadding") {
					if ($optionBreakDown[1] == "0") {
						radioButtonGrp -e -sl 2 ribExtensionPaddingGrp;
					} else {
						radioButtonGrp -e -sl 1 ribExtensionPaddingGrp;
					}
				} else if ($optionBreakDown[0] == "geometryMotion") {
					if ($optionBreakDown[1] == "0") {
						radioButtonGrp -e -sl 2 ribGeometryMotionBlur;
					} else {
						radioButtonGrp -e -sl 1 ribGeometryMotionBlur;
					}
				} else if ($optionBreakDown[0] == "pixelSamples") {
					int $v;
					$v = $optionBreakDown[1];
					intFieldGrp -e -v1 $v ribPixelSamplesGrp;
				}
			}
		}
		$result = 1;
	
	} else if ($action == "query") {

		if (`radioButtonGrp -q -sl ribSingleFileGrp` == 1) {
			$currentOptions = $currentOptions + "singleFile=1";
		} else {
			$currentOptions = $currentOptions + "singleFile=0";
		}

		if (`radioButtonGrp -q -sl ribExtensionPaddingGrp` == 1) {
			$currentOptions = $currentOptions + ";extensionPadding=1";
		} else {
			$currentOptions = $currentOptions + ";extensionPadding=0";
		}

		$sss = `intFieldGrp -q -v1 ribPixelSamplesGrp`;
		$currentOptions = $currentOptions + ";pixelSamples=" + $sss;

		if (`radioButtonGrp -q -sl ribGeometryMotionBlur` == 1) {
			$currentOptions = $currentOptions + ";geometryMotion=1";
		} else {
			$currentOptions = $currentOptions + ";geometryMotion=0";
		}

		eval($resultCallback+" \""+$currentOptions+"\"");
		$result = 1;
	} else {
		$bResult = 0;
	}
	
	return $bResult;
}
