#ifndef _MMutexLock
#define _MMutexLock
//
//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc., and/or its licensors.  All 
// rights reserved.
// 
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors,  which is protected by U.S. and Canadian federal copyright law 
// and by international treaties.
// 
// The Data may not be disclosed or distributed to third parties or be 
// copied or duplicated, in whole or in part, without the prior written 
// consent of Autodesk.
// 
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the following 
// disclaimer, must be included in all copies of the Software, in whole 
// or in part, and all derivative works of the Software, unless such copies 
// or derivative works are solely in the form of machine-executable object 
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO 
// EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST 
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR 
// CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS 
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES. 
// ==========================================================================
//+
//
// CLASS:    MMutexLock
//
// *****************************************************************************
//
// CLASS DESCRIPTION (MMutexLock)
//
// The MMutexLock class provides a heavyweight locking primitive to use with threads
// created by the MThreadPool class.
//
// *****************************************************************************

#if defined __cplusplus

// *****************************************************************************

// INCLUDED HEADER FILES



#include <maya/MTypes.h>
// *****************************************************************************

// DECLARATIONS

// *****************************************************************************

// CLASS DECLARATION (MMutexLock)
/**
*/

/// Methods for managing locks on threads created with MThreadPool and
/// MThreadAsync. (OpenMaya)
class OPENMAYA_EXPORT MMutexLock  
{

public:
	///
	MMutexLock();

	///
	~MMutexLock();

	///
	void lock();

	///
	void unlock();

	///
	bool tryLock();

private:
	MMutexLock(const MMutexLock&) {}; // disallow this
	MMutexLock & operator=(const MMutexLock&); // disallow this
	void* f_spinLockRef;
};

// *****************************************************************************
#endif /* __cplusplus */
#endif /* _MMutexLock */
