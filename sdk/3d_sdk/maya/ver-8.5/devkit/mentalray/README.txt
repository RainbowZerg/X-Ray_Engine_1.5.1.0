==========================================================================Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All rights reserved.The coded instructions, statements, computer programs, and/or related material (collectively the "Data") in these files contain unpublished information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors, which is protected by U.S. and Canadian federal copyright law and by international treaties.The Data is provided for use exclusively by You. You have the right to use, modify, and incorporate this Data into other products for purposes authorized by the Autodesk software license agreement, without fee.The copyright notices in the Software and this entire statement, including the above license grant, this restriction and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all derivative works of the Software, unless such copies or derivative works are solely in the form of machine-executable object code generated by a source language processor.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.==========================================================================

CONTENTS
   - README (this file)
   - include 
     - mi_version.h
     - shader.h
     - geoshader.h     
     - mayaapi.h
   - lib 
     - nt
       - shader.lib
       - mayabase.lib
   - shaders 
     - public-baseshaders
	 - public-contourshaders
     - public-physicsshaders
   - docs
     - writingShaders   


NOTES
   - include
   This directory contains header files for custom shaders.
   The three header files in the include directory are 
   : "mi_version.h", "geoshader.h" and "shader.h" 
   are for generic mental ray shaders. 
   "mayaapi.h" is for mental ray shader that only works for maya.
   This file provides access to maya specific information
   such as light linking, render pass.
   Please see devkit/mentalray/docs/writingShaders for more detail.
   
   - lib
   The file "shader.lib" is for the Windows platform only. This prevents 
   hard-to-find bugs from occuring when compiling custom shaders on Windows. 
   No equivalent file is needed to compile a custom shader for the 
   other platforms.
   "mayabase.lib" is for the Windows platform only, and used for
   mental ray for maya shaders.
   
   - shaders
   public mental ray shader source code

   - docs
     - gettingStarted
	 This is a tutorial for how to use mental ray shaders in maya.
	 It contains html file explaining the workflow for each type of shaders,
	 and example scenes.
	 - writingShaders
	 The simple code demonstrates how to write a mental ray shader
	 so that maya light linking is repected.
     - writingShaders
         This section describes how to write a maya specific mental ray shader.
       - lightlink
           material shader using light linking.
       - lightEmit
	       light shader and material shader example that uses 
	       "emit diffuse", "emit specular" attributes on light.
   
USAGE
   - Include the following statements at the beginning of the custom 
   shader source code (among the other #include statements):

        #include <mi_version.h>
        #include <shader.h>
        #include <geoshader.h>        

   - Please consult your compiler's documentation on how to add 
   header and library paths so that the compiler can find the 
   mental ray for Maya headers (and shader.lib if needed).

   - Please consult the mental ray custom shader documentation 
   also for further details on usage.
     
