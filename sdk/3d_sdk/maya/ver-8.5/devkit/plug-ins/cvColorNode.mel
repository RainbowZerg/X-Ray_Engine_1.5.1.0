//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All 
// rights reserved.
//
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors, which is protected by U.S. and Canadian federal copyright 
// law and by international treaties.
//
// The Data is provided for use exclusively by You. You have the right 
// to use, modify, and incorporate this Data into other products for 
// purposes authorized by the Autodesk software license agreement, 
// without fee.
//
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the 
// following disclaimer, must be included in all copies of the 
// Software, in whole or in part, and all derivative works of 
// the Software, unless such copies or derivative works are solely 
// in the form of machine-executable object code generated by a 
// source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
// PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
// TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS 
// BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK 
// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
// OR PROBABILITY OF SUCH DAMAGES.
//
// ==========================================================================
//+

global proc attachColorNode()
{
	string	$baseName="cvColorShape1";
	string	$object;
	string	$objects[10];
	
	$objects=`ls -sl`;

	for ($object in $objects) {
		string	$shapeNodes[10];
		string	$shapeNodeName;
		string	$nodeTypeName;

		$nodeTypeName = `nodeType $object`;
		if ($nodeTypeName != "transform") {
			error ($object + " is not a transform node\n");
			continue;
		}

		$shapeNodes = `listRelatives -s $object`;

		for ($shapeNodeName in $shapeNodes) {
			string	$parentName;
			string	$colourNodeName;

			$nodeTypeName = `nodeType $shapeNodeName`;

			if ($nodeTypeName == "nurbsCurve") {
				error "nurbs curve objects not yet supported" ;
				continue;
			}

			if ($nodeTypeName == "mesh") {
				error "polygonal objects not yet supported" ;
				continue;
			}

			// trace ("createNode cvColor -n "+$baseName+" -p "+$object+"\n");
			$colourNodeName=`createNode cvColor -n $baseName -p $object`;
			$destPlug   = $object + "|" + $colourNodeName + ".inputSurface";

			switch ($nodeTypeName) {
			case "nurbsSurface":
				$sourcePlug = $shapeNodeName  + ".worldSpace";
				// trace ("connectAttr "+$sourcePlug+" "+$destPlug+"\n");
				connectAttr $sourcePlug $destPlug; 
				break;
			case "nurbsCurve":
				break;
			case "mesh":
				break;
			default:
				// Do nothing
				break;
			}
		}
	}
}
