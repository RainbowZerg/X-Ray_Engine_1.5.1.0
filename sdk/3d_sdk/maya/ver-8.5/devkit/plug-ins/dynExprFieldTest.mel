//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All 
// rights reserved.
//
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors, which is protected by U.S. and Canadian federal copyright 
// law and by international treaties.
//
// The Data is provided for use exclusively by You. You have the right 
// to use, modify, and incorporate this Data into other products for 
// purposes authorized by the Autodesk software license agreement, 
// without fee.
//
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the 
// following disclaimer, must be included in all copies of the 
// Software, in whole or in part, and all derivative works of 
// the Software, unless such copies or derivative works are solely 
// in the form of machine-executable object code generated by a 
// source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
// PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
// TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS 
// BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK 
// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
// OR PROBABILITY OF SUCH DAMAGES.
//
// ==========================================================================
//+

global proc dynExprFieldTest() 
{
	file -force -new;
	currentUnit -linear centimeter -angle degree -time film;   

	// Load the plug-in field. 
	//
	loadPlugin "dynExprField.so";

	// Test 1 : expression on owner shape 

	// Create the new field node
	particle -p -8.487083 0 3.977805 -p -8.364536 0 6.178587 -c 1 -name owner;
	createNode dynExprField -name dynExpr;
	setAttr dynExpr.applyPerVertex 1;
    	select -tgl owner;
    	addDynamic;

	// create particle object.
	particle -ll -4 0 -5 -ur 5 0 4 -grs 1 -c 1 -name particles;
	// connect dynExpr field node with the particle object.
	connectDynamic -f dynExpr particles ;

	// Creation expression to control the attributes on dynExpr.
	addAttr -ln dynExpr_magnitude -dt doubleArray  ownerShape;
	addAttr -ln dynExpr_direction -dt vectorArray  ownerShape;
	dynExpression -s "dynExpr_direction = <<rand(-1,1), rand(-1,1), rand(-1,1)>>;\ndynExpr_magnitude = rand(1,10);" -c ownerShape;

	playbackOptions -e -min 0.00 -max 50.0;
	currentTime -e 0;
	play -wait -forward true;

	// Test 2 : expression on non-owner shape

	file -force -new;

	// Create the new field node
	createNode dynExprField -name dynExpr;

	// create particle object.
	//
	particle -ll -4 0 -5 -ur 5 0 4 -grs 1 -c 1 -name particles ;

	// Creation expression to control the attributes on dynExpr.
	addAttr -ln dynExpr_magnitude -dt doubleArray  particlesShape;
	addAttr -ln dynExpr_direction -dt vectorArray  particlesShape;
	dynExpression -s "dynExpr_direction = <<rand(-1,1), rand(-1,1), rand(-1,1)>>;\ndynExpr_magnitude = rand(1,10);" -c particlesShape;

	// connect dynExpr field node with the particle object.
	//
	connectDynamic -f dynExpr particles ;

	playbackOptions -e -min 0.00 -max 50.0;
	currentTime -e 0;
	play -wait -forward true;
}
