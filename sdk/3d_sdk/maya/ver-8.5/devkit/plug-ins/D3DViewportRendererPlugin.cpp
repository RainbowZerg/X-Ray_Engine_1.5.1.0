//-
// ==========================================================================
// Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All 
// rights reserved.
//
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished 
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its 
// licensors, which is protected by U.S. and Canadian federal copyright 
// law and by international treaties.
//
// The Data is provided for use exclusively by You. You have the right 
// to use, modify, and incorporate this Data into other products for 
// purposes authorized by the Autodesk software license agreement, 
// without fee.
//
// The copyright notices in the Software and this entire statement, 
// including the above license grant, this restriction and the 
// following disclaimer, must be included in all copies of the 
// Software, in whole or in part, and all derivative works of 
// the Software, unless such copies or derivative works are solely 
// in the form of machine-executable object code generated by a 
// source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED 
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF 
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
// PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
// TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS 
// BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK 
// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
// OR PROBABILITY OF SUCH DAMAGES.
//
// ==========================================================================
//+

#include <stdio.h>

#include <D3DViewportRenderer.h>

#include <maya/MGlobal.h>
#include <maya/MString.h>
#include <maya/MStringArray.h>
#include <maya/MFnPlugin.h>
#include <maya/MSceneMessage.h>

#include <stdio.h>

///////////////////////////////////////////////////
//
// Plug-in functions
//
///////////////////////////////////////////////////

static D3DViewportRenderer *g_d3dRenderer = 0;

#if defined(D3D9_SUPPORTED)

static MCallbackId	 D3DfileNewCallbackId = 0;
static void D3DfileNewCallback( void* clientData )
{
	if (g_d3dRenderer)
		g_d3dRenderer->clearResources(false, false); /* keep shaders */
}

static MCallbackId	 D3DmayaExitCallbackId = 0;
static void D3DmayaExitCallback( void* clientData )
{
	if (g_d3dRenderer)
	{
		delete g_d3dRenderer;
		g_d3dRenderer = 0;
	}
}
#endif

MStatus initializePlugin( MObject obj )
{ 
	MStatus   status = MStatus::kFailure;

	MFnPlugin plugin( obj, PLUGIN_COMPANY, "8.0", "Any");

	// Register the renderer
	//
	g_d3dRenderer = new D3DViewportRenderer();
	if (g_d3dRenderer)
	{
		status = g_d3dRenderer->registerRenderer();
		if (status != MStatus::kSuccess)
		{
			status.perror("Failed to register Direct3D renderer properly.");
		}

#if defined(D3D9_SUPPORTED)
		// Must add in these callbacks as on exit Maya never calls uninitializePlugin() !!
		//
		if (D3DfileNewCallbackId == 0)
			D3DfileNewCallbackId = MSceneMessage::addCallback( MSceneMessage::kBeforeNew, D3DfileNewCallback );		
		if (D3DmayaExitCallbackId == 0)
			D3DmayaExitCallbackId = MSceneMessage::addCallback( MSceneMessage::kMayaExiting, D3DmayaExitCallback );		
#endif
	}
	return status;
}

MStatus uninitializePlugin( MObject obj )
{
	MStatus   status = MStatus::kSuccess;

#if defined(D3D9_SUPPORTED)
	// Remove callbacks when plugin is unloaded.
	//
	if (D3DfileNewCallbackId)
	{
		MMessage::removeCallback( D3DfileNewCallbackId );		
		D3DfileNewCallbackId = 0;
	}
	if (D3DmayaExitCallbackId)
	{
		MMessage::removeCallback( D3DmayaExitCallbackId );
		D3DmayaExitCallbackId = 0;
	}
#endif

	// Deregister the renderer
	//
	if (g_d3dRenderer)
	{
		status = g_d3dRenderer->deregisterRenderer();
		if (status != MStatus::kSuccess)
		{
			status.perror("Failed to deregister Direct3D renderer properly.");
		}
		delete g_d3dRenderer;
		g_d3dRenderer = 0;
	}
	return status;
}

